// Code generated by mockery v1.0.0. DO NOT EDIT.

package cache

import mock "github.com/stretchr/testify/mock"

// MockLocalLayerCache is an autogenerated mock type for the LocalLayerCache type
type MockLocalLayerCache struct {
	mock.Mock
}

type ClearReturns struct {
	Err error
}

type ClearExpectation struct {
	Returns ClearReturns
}

func (_m *MockLocalLayerCache) ApplyClearExpectation(e ClearExpectation) {
	var args []interface{}
	_m.On("Clear", args...).Return(e.Returns.Err)
}

func (_m *MockLocalLayerCache) ApplyClearExpectations(expectations []ClearExpectation) {
	for _, e := range expectations {
		_m.ApplyClearExpectation(e)
	}
}

// Clear provides a mock function with given fields:
func (_m *MockLocalLayerCache) Clear() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type GetLayerArgs struct {
	LayerID         string
	LayerIDAnything bool
}

type GetLayerReturns struct {
	LayerBlob []byte
}

type GetLayerExpectation struct {
	Args    GetLayerArgs
	Returns GetLayerReturns
}

func (_m *MockLocalLayerCache) ApplyGetLayerExpectation(e GetLayerExpectation) {
	var args []interface{}
	if e.Args.LayerIDAnything {
		args = append(args, mock.Anything)
	} else {
		args = append(args, e.Args.LayerID)
	}
	_m.On("GetLayer", args...).Return(e.Returns.LayerBlob)
}

func (_m *MockLocalLayerCache) ApplyGetLayerExpectations(expectations []GetLayerExpectation) {
	for _, e := range expectations {
		_m.ApplyGetLayerExpectation(e)
	}
}

// GetLayer provides a mock function with given fields: layerID
func (_m *MockLocalLayerCache) GetLayer(layerID string) []byte {
	ret := _m.Called(layerID)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string) []byte); ok {
		r0 = rf(layerID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}
